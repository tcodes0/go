name: Main
run-name: ${{ github.head_ref }}@${{ github.sha }}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  changed-files:
    name: Analyze changed files
    runs-on: ubuntu-latest
    outputs:
      # modules
      modClock: ${{ steps.list-changed-files.outputs.clock_all_changed_files }}
      modHttpmisc: ${{ steps.list-changed-files.outputs.httpmisc_all_changed_files }}
      modHue: ${{ steps.list-changed-files.outputs.hue_all_changed_files }}
      modIdentifier: ${{ steps.list-changed-files.outputs.identifier_all_changed_files }}
      modJsonutil: ${{ steps.list-changed-files.outputs.jsonutil_all_changed_files }}
      modLogging: ${{ steps.list-changed-files.outputs.logging_all_changed_files }}
      modMisc: ${{ steps.list-changed-files.outputs.misc_all_changed_files }}
      # others
      goMod: ${{ steps.list-changed-files.outputs.go_mod_all_changed_files }}
      config: ${{ steps.list-changed-files.outputs.config_all_changed_files }}
      shell: ${{ steps.list-changed-files.outputs.shell_all_changed_files }}
      doc: ${{ steps.list-changed-files.outputs.doc_all_changed_files }}
      anyMod: ${{
        steps.list-changed-files.outputs.clock_all_changed_files
        || steps.list-changed-files.outputs.httpmisc_all_changed_files
        || steps.list-changed-files.outputs.hue_all_changed_files
        || steps.list-changed-files.outputs.identifier_all_changed_files
        || steps.list-changed-files.outputs.jsonutil_all_changed_files
        || steps.list-changed-files.outputs.logging_all_changed_files
        || steps.list-changed-files.outputs.misc_all_changed_files
        }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Changed files
        id: list-changed-files
        uses: tj-actions/changed-files@v44
        with:
          # since_last_remote_commit: true # use only for testing, it's easy to produce no changed files
          files_yaml: |
            go_mod:
              - '**/go.mod'
              - '**/go.sum'
            config:
              - '**/*.yaml'
              - '**/*.yml'
              - '**/*.json'
            doc:
              - '**/*.md'
            shell:
              - sh/**.sh
            clock:
              - clock/**.go
            httpmisc:
              - httpmisc/**.go
            hue:
              - hue/**.go
            identifier:
              - identifier/**.go
            jsonutil:
              - jsonutil/**.go
            logging:
              - logging/**.go
            misc:
              - misc/**.go

  debug:
    name: Debug
    runs-on: ubuntu-latest
    if: false # change to debug
    env:
      HEADREF: ${{ github.head_ref }}
      BASEREF: ${{ github.base_ref }}
    steps:
      - name: Debug
        run: true

  commitlint:
    name: Commit Lint
    runs-on: ubuntu-latest
    needs: changed-files
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create package.json
        working-directory: .
        shell: bash
        run: echo '{}' > package-lock.json

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.2
        with:
          node-version: lts/iron
          cache: npm

      - name: Run commitlint
        working-directory: .
        shell: bash
        env:
          CONFIG_PATH: .commitlintrc.yml
          VERSION: 19.3.0
        run: ./sh/workflows/main/commit-lint.sh

  go-mod:
    name: Go.mod up to date
    runs-on: ubuntu-latest
    needs: changed-files
    if: needs.changed-files.outputs.anyMod || needs.changed-files.outputs.goMod
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Go mod
        uses: j0hnsmith/go-mod-check@v1
        with:
          working-directory: .

  mocks:
    name: Go mocks up to date
    runs-on: ubuntu-latest
    needs: changed-files
    if: needs.changed-files.outputs.anyMod
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Mockery
        uses: brokeyourbike/go-mockery-action@v0
        with:
          mockery-version: "2.43.0"
      - run: ./sh/generate-mocks.sh

      - name: Diff mocks
        working-directory: .
        shell: bash
        run: ./sh/workflows/main/diff.sh

  shell:
    name: Lint format and test shell
    runs-on: ubuntu-latest
    needs: changed-files
    if: needs.changed-files.outputs.shell
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint and format
        uses: luizm/action-sh-checker@v0.8.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SHFMT_OPTS: -d -i 2 -ln bash
          SHELLCHECK_OPTS: -x --severity=warning
        with:
          sh_checker_only_diff: true
          # needs write access https://github.com/luizm/action-sh-checker/pull/57
          # sh_checker_comment: true

      - name: Test
        run: find sh/sh_test -name "*-test.sh" -exec ./{} \;

  config:
    name: Format config
    runs-on: ubuntu-latest
    needs: changed-files
    if: needs.changed-files.outputs.config
    env:
      FILES: ${{ needs.changed-files.outputs.config }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prettier
        uses: hudsonm62/prettier-cli@v1.0.0
        with:
          args: --check ${{ env.FILES }}

  docs:
    name: Spellcheck docs
    runs-on: ubuntu-latest
    needs: changed-files
    # does not work locally, see CI scripts
    if: needs.changed-files.outputs.doc && github.event.local != true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cspell
        uses: streetsidesoftware/cspell-action@v6.2.0
        with:
          files: "**/*.md"
          incremental_files_only: true
          config: ./cspell.config.yml

  clock:
    name: clock
    needs: changed-files
    if: needs.changed-files.outputs.modClock
    uses: ./.github/workflows/module-pr.yml
    with:
      goVersion: 1.22
      modulePath: clock

  httpmisc:
    name: httpmisc
    needs: changed-files
    if: needs.changed-files.outputs.modHttpMisc
    uses: ./.github/workflows/module-pr.yml
    with:
      goVersion: 1.22
      modulePath: httpmisc

  hue:
    name: hue
    needs: changed-files
    if: needs.changed-files.outputs.modHue
    uses: ./.github/workflows/module-pr.yml
    with:
      goVersion: 1.22
      modulePath: hue

  identifier:
    name: identifier
    needs: changed-files
    if: needs.changed-files.outputs.modIdentifier
    uses: ./.github/workflows/module-pr.yml
    with:
      goVersion: 1.22
      modulePath: identifier

  jsonutil:
    name: jsonutil
    needs: changed-files
    if: needs.changed-files.outputs.modJsonutil
    uses: ./.github/workflows/module-pr.yml
    with:
      goVersion: 1.22
      modulePath: jsonutil

  logging:
    name: logging
    needs: changed-files
    if: needs.changed-files.outputs.modLogging
    uses: ./.github/workflows/module-pr.yml
    with:
      goVersion: 1.22
      modulePath: logging

  misc:
    name: misc
    needs: changed-files
    if: needs.changed-files.outputs.modMisc
    uses: ./.github/workflows/module-pr.yml
    with:
      goVersion: 1.22
      modulePath: misc
