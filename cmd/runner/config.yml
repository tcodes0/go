# unmarshaled into cmd/runner/main.go task type
- name: build
  module: true
  minInputs: 1
  env:
    - MOD_PATH=<module>
    - HOME=<inherit>
    - PATH=<inherit>
  exec:
    - ./sh/workflows/module-pr/build.sh

- name: lint
  module: true
  minInputs: 1
  exec:
    - "golangci-lint run --timeout 10s --print-issued-lines=false"

- name: format
  module: true
  minInputs: 1
  exec:
    - "gofumpt -l -w"
    - "prettier --write <module>/**/*{.yml,.yaml,.json}"

- name: test
  module: true
  minInputs: 1
  env:
    - CACHE=true
    - GITHUB_OUTPUT=/dev/null
    - COVERAGE_FILE=coverage.out
    - MOD_PATH=<module>
    - PATH=<inherit>
    - HOME=<inherit>
  exec:
    - ./sh/workflows/module-pr/test-pretty.sh

- name: ci
  exec:
    - "echo run ./ci"

- name: format-configs
  exec:
    - "prettier --write ./**/*{.yml,.yaml,.json}"

- name: generate-mocks
  exec:
    - ./sh/generate-mocks.sh

- name: spellcheck
  exec:
    - "cspell --gitignore ."

- name: setup
  exec:
    - ./sh/setup.sh

- name: generate-go-work
  env:
    - PATH=<inherit>
    - HOME=<inherit>
    - CMD_COLOR=<inherit>
    - CMD_LOGLEVEL=<inherit>
  exec:
    - go run cmd/gengowork/main.go

- name: new-module
  minInputs: 1
  exec:
    - ./sh/new-module.sh

- name: copyright
  env:
    - PATH=<inherit>
    - HOME=<inherit>
    - CMD_COLOR=<inherit>
    - CMD_LOGLEVEL=<inherit>
  exec:
    - "go run cmd/copyright/main.go"
