# see main.go task type
# <variables> are replaced by some value
# see main.go const section for variables

version: 0.1.5
tasks:
  - name: build
    module: true
    env:
      - MOD_PATH=<module>
      - HOME=<inherit>
      - PATH=<inherit>
      - BASH_ENV=./sh/lib/lib.sh
    exec:
      - ./sh/workflows/module_pr/build.sh

  - name: lint
    module: true
    exec:
      - "golangci-lint run --timeout 10s --print-issued-lines=false"

  - name: go-lint-fix
    module: true
    env:
      - BASH_ENV=./sh/lib/lib.sh
    exec:
      - "./sh/lib/go/lint_fix.sh <module>"

  - name: format
    module: true
    exec:
      - gofumpt -l -w
      - prettier --write <module>/**/*{.yml}

  - name: test
    module: true
    env:
      - CACHE=true
      - GITHUB_OUTPUT=/dev/null
      - COVERAGE_FILE=coverage.out
      - MOD_PATH=<module>
      - PATH=<inherit>
      - HOME=<inherit>
    exec:
      - ./sh/workflows/module_pr/test_pretty.sh

  - name: format-configs
    exec:
      - "prettier --write ./**/*{.yml,.json}"

  - name: generate-mocks
    exec:
      - ./sh/lib/generate-mocks.sh

  - name: spellcheck
    exec:
      - "cspell --gitignore ."

  - name: setup
    env:
      - HOME=<inherit>
      - PATH=<inherit>
      - NVM_DIR=<inherit>
      - BASH_ENV=./sh/lib/lib.sh
    exec:
      - ./sh/setup.sh

  - name: generate-go-work
    env:
      - PATH=<inherit>
      - HOME=<inherit>
      - CMD_COLOR=<inherit>
      - CMD_LOGLEVEL=<inherit>
    exec:
      - go run cmd/gengowork/main.go

  - name: new-module
    exec:
      - ./sh/new_module.sh

  - name: copyright-fix-go
    env:
      - PATH=<inherit>
      - HOME=<inherit>
      - CMD_COLOR=<inherit>
      - CMD_LOGLEVEL=<inherit>
    exec:
      - go run cmd/copyright/main.go -check '*.go' -fix -comment '// '

  - name: copyright-fix-sh
    env:
      - PATH=<inherit>
      - HOME=<inherit>
      - CMD_COLOR=<inherit>
      - CMD_LOGLEVEL=<inherit>
    exec:
      - go run cmd/copyright/main.go -check '*.sh' -fix -comment '# ' -shebang
